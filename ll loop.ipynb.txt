{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ll loop","provenance":[],"authorship_tag":"ABX9TyMPwrNG6E+F83B3LPciBoyB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4FMnoJ8I_-jt","executionInfo":{"status":"ok","timestamp":1633798908932,"user_tz":-330,"elapsed":5,"user":{"displayName":"Darshan Jain","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh6sOEC7-x4F5TAc6eaWyZUv4SqorrU1A1gdE63ebk=s64","userId":"06940845203100843695"}},"outputId":"e77bb780-1323-4b86-c61e-178d23c2ce36"},"source":["class Node:\n","    def __init__(self, data):\n","        self.data = data\n","        self.next = None\n"," \n"," \n","class LinkedList:\n","    def __init__(self):\n","        self.head = None\n","\n","    def push(self, new_data):\n","        new_node = Node(new_data)\n","        new_node.next = self.head\n","        self.head = new_node\n"," \n","    def detectAndRemoveLoop(self): \n","      if self.head is None:\n","          return\n","      if self.head.next is None:\n","          return\n","      slow_p = self.head\n","      fast_p = self.head\n","          \n","      while(slow_p and fast_p and fast_p.next):\n","          slow_p = slow_p.next\n","          fast_p = fast_p.next.next\n"," \n","          # If slow_p and fast_p meet at some point then\n","          # there is a loop\n","          if slow_p == fast_p:\n","            slow_p = self.head\n","              # Finding the beginning of the loop\n","            while (slow_p.next != fast_p.next):\n","              slow_p = slow_p.next\n","              fast_p = fast_p.next\n"," \n","                # Sinc fast.next is the looping point\n","            fast_p.next = None  # Remove loop\n"," \n","    def printList(self):\n","        temp = self.head\n","        while(temp):\n","            print(temp.data, end = ' ')\n","            temp = temp.next\n"," \n"," \n","# Driver program\n","llist = LinkedList()\n","llist.head = Node(50)\n","llist.head.next = Node(20)\n","llist.head.next.next = Node(15)\n","llist.head.next.next.next = Node(4)\n","llist.head.next.next.next.next = Node(10)\n"," \n","# Create a loop for testing\n","llist.head.next.next.next.next.next = llist.head.next.next\n"," \n","llist.detectAndRemoveLoop()\n"," \n","print(\"Linked List after removing loop\")\n","llist.printList()"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Linked List after removing loop\n","50 20 15 4 10 "]}]},{"cell_type":"code","metadata":{"id":"Hosn4S6BAJn2"},"source":[""],"execution_count":null,"outputs":[]}]}